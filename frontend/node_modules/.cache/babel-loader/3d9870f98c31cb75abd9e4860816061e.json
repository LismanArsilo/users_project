{"ast":null,"code":"import * as ActionType from \"../constants/UserSetting\";\nconst INIT_STATE = {\n  users: [],\n  user: []\n};\n\nconst userSettingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.GET_USER_SETING_REQUEST:\n      return { ...state\n      };\n\n    case ActionType.GET_USER_SETING_SUCCESS:\n      return GetUserSettingSuccedd(state, action);\n\n    case ActionType.GETONE_USER_SETING_REQUEST:\n      return { ...state\n      };\n\n    case ActionType.GETONE_USER_SETING_SUCCESS:\n      return GetOneUserSettingSuccedd(state, action);\n\n    case ActionType.DEL_EMAIL_SETING_REQUEST:\n      return { ...state\n      };\n\n    case ActionType.DEL_EMAIL_SETING_SUCCESS:\n      return DelUserSettingSuccedd(state, action);\n\n    default:\n      return GetUserSettingSuccedd(state, action);\n  }\n};\n\nconst GetUserSettingSuccedd = (state, action) => {\n  return { ...state,\n    users: action.payload\n  };\n};\n\n_c = GetUserSettingSuccedd;\n\nconst GetOneUserSettingSuccedd = (state, action) => {\n  return { ...state,\n    user: action.payload\n  };\n};\n\n_c2 = GetOneUserSettingSuccedd;\n\nconst DelUserSettingSuccedd = (state, action) => {\n  const {\n    email\n  } = action;\n  const filterUserEmail = state.user.users_emails.filter(el => el.pmail_id !== email);\n  const newwww = state.user;\n  console.info(newwww.join(filterUserEmail)); // console.info(state.user.join(filterUserEmail));\n\n  return { ...state // user: [...filterUserEmail],\n\n  };\n};\n\n_c3 = DelUserSettingSuccedd;\nexport default userSettingReducer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetUserSettingSuccedd\");\n$RefreshReg$(_c2, \"GetOneUserSettingSuccedd\");\n$RefreshReg$(_c3, \"DelUserSettingSuccedd\");","map":{"version":3,"sources":["E:/users/frontend/src/redux-saga/reducers/UserSettingReducer.js"],"names":["ActionType","INIT_STATE","users","user","userSettingReducer","state","action","type","GET_USER_SETING_REQUEST","GET_USER_SETING_SUCCESS","GetUserSettingSuccedd","GETONE_USER_SETING_REQUEST","GETONE_USER_SETING_SUCCESS","GetOneUserSettingSuccedd","DEL_EMAIL_SETING_REQUEST","DEL_EMAIL_SETING_SUCCESS","DelUserSettingSuccedd","payload","email","filterUserEmail","users_emails","filter","el","pmail_id","newwww","console","info","join"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAIA,MAAMC,kBAAkB,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBJ,UAAuB;AAAA,MAAXK,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAU,CAACQ,uBAAhB;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACF,SAAKL,UAAU,CAACS,uBAAhB;AACE,aAAOC,qBAAqB,CAACL,KAAD,EAAQC,MAAR,CAA5B;;AACF,SAAKN,UAAU,CAACW,0BAAhB;AACE,aAAO,EAAE,GAAGN;AAAL,OAAP;;AACF,SAAKL,UAAU,CAACY,0BAAhB;AACE,aAAOC,wBAAwB,CAACR,KAAD,EAAQC,MAAR,CAA/B;;AACF,SAAKN,UAAU,CAACc,wBAAhB;AACE,aAAO,EAAE,GAAGT;AAAL,OAAP;;AACF,SAAKL,UAAU,CAACe,wBAAhB;AACE,aAAOC,qBAAqB,CAACX,KAAD,EAAQC,MAAR,CAA5B;;AACF;AACE,aAAOI,qBAAqB,CAACL,KAAD,EAAQC,MAAR,CAA5B;AAdJ;AAgBD,CAjBD;;AAmBA,MAAMI,qBAAqB,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC/C,SAAO,EACL,GAAGD,KADE;AAELH,IAAAA,KAAK,EAAEI,MAAM,CAACW;AAFT,GAAP;AAID,CALD;;KAAMP,qB;;AAON,MAAMG,wBAAwB,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAClD,SAAO,EACL,GAAGD,KADE;AAELF,IAAAA,IAAI,EAAEG,MAAM,CAACW;AAFR,GAAP;AAID,CALD;;MAAMJ,wB;;AAMN,MAAMG,qBAAqB,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC/C,QAAM;AAAEY,IAAAA;AAAF,MAAYZ,MAAlB;AACA,QAAMa,eAAe,GAAGd,KAAK,CAACF,IAAN,CAAWiB,YAAX,CAAwBC,MAAxB,CACrBC,EAAD,IAAQA,EAAE,CAACC,QAAH,KAAgBL,KADF,CAAxB;AAGA,QAAMM,MAAM,GAAGnB,KAAK,CAACF,IAArB;AACAsB,EAAAA,OAAO,CAACC,IAAR,CAAaF,MAAM,CAACG,IAAP,CAAYR,eAAZ,CAAb,EAN+C,CAO/C;;AACA,SAAO,EACL,GAAGd,KADE,CAEL;;AAFK,GAAP;AAID,CAZD;;MAAMW,qB;AAcN,eAAeZ,kBAAf","sourcesContent":["import * as ActionType from \"../constants/UserSetting\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  user: [],\r\n};\r\nconst userSettingReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionType.GET_USER_SETING_REQUEST:\r\n      return { ...state };\r\n    case ActionType.GET_USER_SETING_SUCCESS:\r\n      return GetUserSettingSuccedd(state, action);\r\n    case ActionType.GETONE_USER_SETING_REQUEST:\r\n      return { ...state };\r\n    case ActionType.GETONE_USER_SETING_SUCCESS:\r\n      return GetOneUserSettingSuccedd(state, action);\r\n    case ActionType.DEL_EMAIL_SETING_REQUEST:\r\n      return { ...state };\r\n    case ActionType.DEL_EMAIL_SETING_SUCCESS:\r\n      return DelUserSettingSuccedd(state, action);\r\n    default:\r\n      return GetUserSettingSuccedd(state, action);\r\n  }\r\n};\r\n\r\nconst GetUserSettingSuccedd = (state, action) => {\r\n  return {\r\n    ...state,\r\n    users: action.payload,\r\n  };\r\n};\r\n\r\nconst GetOneUserSettingSuccedd = (state, action) => {\r\n  return {\r\n    ...state,\r\n    user: action.payload,\r\n  };\r\n};\r\nconst DelUserSettingSuccedd = (state, action) => {\r\n  const { email } = action;\r\n  const filterUserEmail = state.user.users_emails.filter(\r\n    (el) => el.pmail_id !== email\r\n  );\r\n  const newwww = state.user;\r\n  console.info(newwww.join(filterUserEmail));\r\n  // console.info(state.user.join(filterUserEmail));\r\n  return {\r\n    ...state,\r\n    // user: [...filterUserEmail],\r\n  };\r\n};\r\n\r\nexport default userSettingReducer;\r\n"]},"metadata":{},"sourceType":"module"}