{"ast":null,"code":"var _jsxFileName = \"E:\\\\users\\\\frontend\\\\src\\\\views\\\\app\\\\setting\\\\Setting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport userApi from \"../api/api-user-setting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Sertting() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    userAll();\n  }, []);\n\n  const userAll = async () => {\n    await userApi.findOneUser().then(data => {\n      setUsers(data);\n    });\n  };\n\n  console.info(users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: users.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), users.users_emails && users.users_emails.map((email, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: email.pmail_address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        }), users.users_experiences && users.users_experiences.map((exp, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: exp.usex_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: exp.usex_profile_headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        }), users.users_address && users.users_address.map((address, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: address.etad_addr_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sertting, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = Sertting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sertting\");","map":{"version":3,"sources":["E:/users/frontend/src/views/app/setting/Setting.js"],"names":["React","useEffect","useState","userApi","Sertting","users","setUsers","userAll","findOneUser","then","data","console","info","user_name","users_emails","map","email","index","pmail_address","users_experiences","exp","usex_title","usex_profile_headline","users_address","address","etad_addr_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAC1B,UAAMJ,OAAO,CAACK,WAAR,GAAsBC,IAAtB,CAA4BC,IAAD,IAAU;AACzCJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAFK,CAAN;AAGD,GAJD;;AAKAC,EAAAA,OAAO,CAACC,IAAR,CAAaP,KAAb;AACA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE;AAAA,oBAAIA,KAAK,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGR,KAAK,CAACS,YAAN,IACCT,KAAK,CAACS,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,8BACE;AAAA,mCACE;AAAA,qCACE;AAAA,0BAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAOD,SARD,CAHJ,EAYGZ,KAAK,CAACc,iBAAN,IACCd,KAAK,CAACc,iBAAN,CAAwBJ,GAAxB,CAA4B,CAACK,GAAD,EAAMH,KAAN,KAAgB;AAC1C,8BACE;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAIG,GAAG,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAID,GAAG,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAUL,KAAV;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAQD,SATD,CAbJ,EAuBGZ,KAAK,CAACkB,aAAN,IACClB,KAAK,CAACkB,aAAN,CAAoBR,GAApB,CAAwB,CAACS,OAAD,EAAUP,KAAV,KAAoB;AAC1C,8BACE;AAAA,mCACE;AAAA,qCACE;AAAA,0BAAIO,OAAO,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,eAAUR,KAAV;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAOD,SARD,CAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAxDuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport userApi from \"../api/api-user-setting\";\r\n\r\nexport default function Sertting() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    userAll();\r\n  }, []);\r\n\r\n  const userAll = async () => {\r\n    await userApi.findOneUser().then((data) => {\r\n      setUsers(data);\r\n    });\r\n  };\r\n  console.info(users);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <h2>Profile</h2>\r\n        </div>\r\n        <div>\r\n          <p>{users.user_name}</p>\r\n          {users.users_emails &&\r\n            users.users_emails.map((email, index) => {\r\n              return (\r\n                <>\r\n                  <div key={index}>\r\n                    <p>{email.pmail_address}</p>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          {users.users_experiences &&\r\n            users.users_experiences.map((exp, index) => {\r\n              return (\r\n                <>\r\n                  <div key={index}>\r\n                    <p>{exp.usex_title}</p>\r\n                    <p>{exp.usex_profile_headline}</p>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          {users.users_address &&\r\n            users.users_address.map((address, index) => {\r\n              return (\r\n                <>\r\n                  <div key={index}>\r\n                    <p>{address.etad_addr_id}</p>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}