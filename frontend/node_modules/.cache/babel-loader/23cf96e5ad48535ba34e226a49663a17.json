{"ast":null,"code":"import * as ActionType from \"../constants/UserSetting\";\nconst INIT_STATE = {\n  users: [],\n  user: []\n};\n\nconst userSettingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.GET_USER_SETING_REQUEST:\n      return { ...state\n      };\n\n    case ActionType.GET_USER_SETING_SUCCESS:\n      return GetUserSettingSuccedd(state, action);\n\n    case ActionType.GETONE_USER_SETING_REQUEST:\n      return { ...state\n      };\n\n    case ActionType.GETONE_USER_SETING_SUCCESS:\n      return GetOneUserSettingSuccedd(state, action);\n\n    default:\n      return GetUserSettingSuccedd(state, action);\n  }\n};\n\nconst GetUserSettingSuccedd = (state, action) => {\n  return { ...state,\n    users: action.payload\n  };\n};\n\n_c = GetUserSettingSuccedd;\n\nconst GetOneUserSettingSuccedd = (state, action) => {\n  return { ...state,\n    user: action.payload\n  };\n};\n\n_c2 = GetOneUserSettingSuccedd;\nexport default userSettingReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetUserSettingSuccedd\");\n$RefreshReg$(_c2, \"GetOneUserSettingSuccedd\");","map":{"version":3,"sources":["E:/users/frontend/src/redux-saga/reducers/UserSettingReducer.js"],"names":["ActionType","INIT_STATE","users","user","userSettingReducer","state","action","type","GET_USER_SETING_REQUEST","GET_USER_SETING_SUCCESS","GetUserSettingSuccedd","GETONE_USER_SETING_REQUEST","GETONE_USER_SETING_SUCCESS","GetOneUserSettingSuccedd","payload"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAIA,MAAMC,kBAAkB,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBJ,UAAuB;AAAA,MAAXK,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAU,CAACQ,uBAAhB;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACF,SAAKL,UAAU,CAACS,uBAAhB;AACE,aAAOC,qBAAqB,CAACL,KAAD,EAAQC,MAAR,CAA5B;;AACF,SAAKN,UAAU,CAACW,0BAAhB;AACE,aAAO,EAAE,GAAGN;AAAL,OAAP;;AACF,SAAKL,UAAU,CAACY,0BAAhB;AACE,aAAOC,wBAAwB,CAACR,KAAD,EAAQC,MAAR,CAA/B;;AACF;AACE,aAAOI,qBAAqB,CAACL,KAAD,EAAQC,MAAR,CAA5B;AAVJ;AAYD,CAbD;;AAeA,MAAMI,qBAAqB,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC/C,SAAO,EACL,GAAGD,KADE;AAELH,IAAAA,KAAK,EAAEI,MAAM,CAACQ;AAFT,GAAP;AAID,CALD;;KAAMJ,qB;;AAMN,MAAMG,wBAAwB,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAClD,SAAO,EACL,GAAGD,KADE;AAELF,IAAAA,IAAI,EAAEG,MAAM,CAACQ;AAFR,GAAP;AAID,CALD;;MAAMD,wB;AAMN,eAAeT,kBAAf","sourcesContent":["import * as ActionType from \"../constants/UserSetting\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  user: [],\r\n};\r\nconst userSettingReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionType.GET_USER_SETING_REQUEST:\r\n      return { ...state };\r\n    case ActionType.GET_USER_SETING_SUCCESS:\r\n      return GetUserSettingSuccedd(state, action);\r\n    case ActionType.GETONE_USER_SETING_REQUEST:\r\n      return { ...state };\r\n    case ActionType.GETONE_USER_SETING_SUCCESS:\r\n      return GetOneUserSettingSuccedd(state, action);\r\n    default:\r\n      return GetUserSettingSuccedd(state, action);\r\n  }\r\n};\r\n\r\nconst GetUserSettingSuccedd = (state, action) => {\r\n  return {\r\n    ...state,\r\n    users: action.payload,\r\n  };\r\n};\r\nconst GetOneUserSettingSuccedd = (state, action) => {\r\n  return {\r\n    ...state,\r\n    user: action.payload,\r\n  };\r\n};\r\nexport default userSettingReducer;\r\n"]},"metadata":{},"sourceType":"module"}