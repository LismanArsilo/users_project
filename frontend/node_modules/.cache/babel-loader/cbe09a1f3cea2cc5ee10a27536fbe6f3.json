{"ast":null,"code":"import * as ActionType from '../constants/User';\nconst INIT_STATE = {\n  userProfile: {},\n  isLogout: false,\n  isLoading: true,\n  isLoggedIn: false,\n  token: localStorage.getItem('@token'),\n  message: ''\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.ADD_SIGNUP_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.ADD_SIGNUP_SUCCEED:\n      {\n        return applyAddSignupSucceed(state, action);\n      }\n\n    case ActionType.GET_SIGNIN_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.GET_SIGNIN_SUCCEED:\n      {\n        return applyGetSigninSucceed(state, action);\n      }\n\n    case ActionType.GET_SIGNOUT_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.GET_SIGNOUT_SUCCEED:\n      {\n        return applyGetSignoutSucceed(state, action);\n      }\n\n    case ActionType.SIGNUP_FAILED:\n      {\n        return { ...state,\n          isLoading: false,\n          error: action.payload.error\n        };\n      }\n\n    case ActionType.SHOW_MESSAGE:\n      {\n        return { ...state,\n          message: action.payload.message,\n          isLoggedIn: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst applyAddSignupSucceed = (state, action) => {\n  const {\n    payload\n  } = action;\n  return { ...state,\n    username: payload.user_name,\n    email: payload.user_email,\n    role_type: payload.user_role_type,\n    isLoading: false\n  };\n};\n\nconst applyGetSigninSucceed = (state, action) => {\n  const {\n    payload\n  } = action;\n  const {\n    profile\n  } = payload;\n  return { ...state,\n    userProfile: { ...profile\n    },\n    isLoading: false,\n    isLoggedIn: true,\n    isLogout: false,\n    message: ''\n  };\n};\n\nconst applyGetSignoutSucceed = (state, action) => {\n  return { ...state,\n    userProfile: {\n      userId: \"\",\n      userName: \"\",\n      email: \"\",\n      userRoles: \"\"\n    },\n    isLoading: false,\n    isLoggedIn: false,\n    isLogout: true,\n    message: \"\"\n  };\n};\n\nexport default userReducer;","map":{"version":3,"sources":["E:/users/frontend/src/redux-saga/reducers/UserReducer.js"],"names":["ActionType","INIT_STATE","userProfile","isLogout","isLoading","isLoggedIn","token","localStorage","getItem","message","userReducer","state","action","type","ADD_SIGNUP_REQUEST","ADD_SIGNUP_SUCCEED","applyAddSignupSucceed","GET_SIGNIN_REQUEST","GET_SIGNIN_SUCCEED","applyGetSigninSucceed","GET_SIGNOUT_REQUEST","GET_SIGNOUT_SUCCEED","applyGetSignoutSucceed","SIGNUP_FAILED","error","payload","SHOW_MESSAGE","username","user_name","email","user_email","role_type","user_role_type","profile","userId","userName","userRoles"],"mappings":"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","sourcesContent":["import * as ActionType from '../constants/User';\r\n\r\nconst INIT_STATE = {\r\n    \r\n    userProfile:{},\r\n    isLogout : false,\r\n    isLoading : true,\r\n    isLoggedIn : false,\r\n    token : localStorage.getItem('@token'),\r\n    message : ''\r\n}\r\n\r\nconst userReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case ActionType.ADD_SIGNUP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ActionType.ADD_SIGNUP_SUCCEED: {\r\n            return applyAddSignupSucceed(state, action)\r\n        }\r\n        case ActionType.GET_SIGNIN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ActionType.GET_SIGNIN_SUCCEED: {\r\n            return applyGetSigninSucceed(state, action)\r\n        }\r\n        case ActionType.GET_SIGNOUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case ActionType.GET_SIGNOUT_SUCCEED: {\r\n            return applyGetSignoutSucceed(state, action)\r\n        }\r\n        case ActionType.SIGNUP_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload.error,\r\n            };\r\n        }\r\n        case ActionType.SHOW_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                message : action.payload.message,\r\n                isLoggedIn : false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst applyAddSignupSucceed = (state, action) => {\r\n    const { payload } = action;\r\n    return {\r\n        ...state,\r\n        username: payload.user_name,\r\n        email: payload.user_email,\r\n        role_type: payload.user_role_type,\r\n        isLoading: false\r\n    }\r\n}\r\n\r\nconst applyGetSigninSucceed = (state, action) => {\r\n    const { payload } = action;\r\n    const { profile } = payload\r\n    return {\r\n        ...state,\r\n        userProfile: {...profile},\r\n        isLoading: false,\r\n        isLoggedIn : true,\r\n        isLogout : false,\r\n        message : ''\r\n    }\r\n}\r\n\r\nconst applyGetSignoutSucceed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        userProfile: {\r\n            userId : \"\",\r\n            userName : \"\",\r\n            email : \"\",\r\n            userRoles : \"\"\r\n        },\r\n        isLoading: false,\r\n        isLoggedIn : false,\r\n        isLogout : true,\r\n        message : \"\",\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer"]},"metadata":{},"sourceType":"module"}