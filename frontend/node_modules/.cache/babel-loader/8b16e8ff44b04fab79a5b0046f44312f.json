{"ast":null,"code":"import * as ActionType from \"../constants/User\";\nconst INIT_STATE = {\n  userProfile: {},\n  isLogout: false,\n  isLoading: true,\n  isLoggedIn: false,\n  token: localStorage.getItem(\"@token\"),\n  message: \"\"\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.ADD_SIGNUP_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.ADD_SIGNUP_SUCCEED:\n      {\n        return applyAddSignupSucceed(state, action);\n      }\n\n    case ActionType.GET_SIGNIN_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.GET_SIGNIN_SUCCEED:\n      {\n        return applyGetSigninSucceed(state, action);\n      }\n\n    case ActionType.GET_SIGNOUT_REQUEST:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ActionType.GET_SIGNOUT_SUCCEED:\n      {\n        return applyGetSignoutSucceed(state, action);\n      }\n\n    case ActionType.SIGNUP_FAILED:\n      {\n        return { ...state,\n          isLoading: false,\n          error: action.payload.error\n        };\n      }\n\n    case ActionType.SHOW_MESSAGE:\n      {\n        return { ...state,\n          message: action.payload.message,\n          isLoggedIn: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst applyAddSignupSucceed = (state, action) => {\n  const {\n    payload\n  } = action;\n  return { ...state,\n    username: payload.user_name,\n    email: payload.user_email,\n    role_type: payload.user_role_type,\n    isLoading: false\n  };\n};\n\nconst applyGetSigninSucceed = (state, action) => {\n  const {\n    payload\n  } = action;\n  const {\n    profile\n  } = payload;\n  return { ...state,\n    userProfile: { ...profile\n    },\n    isLoading: false,\n    isLoggedIn: true,\n    isLogout: false,\n    message: \"\"\n  };\n};\n\nconst applyGetSignoutSucceed = (state, action) => {\n  return { ...state,\n    userProfile: {\n      userId: \"\",\n      userName: \"\",\n      email: \"\",\n      userRoles: \"\"\n    },\n    isLoading: false,\n    isLoggedIn: false,\n    isLogout: true,\n    message: \"\"\n  };\n};\n\nexport default userReducer;","map":{"version":3,"sources":["E:/users/frontend/src/redux-saga/reducers/UserReducer.js"],"names":["ActionType","INIT_STATE","userProfile","isLogout","isLoading","isLoggedIn","token","localStorage","getItem","message","userReducer","state","action","type","ADD_SIGNUP_REQUEST","ADD_SIGNUP_SUCCEED","applyAddSignupSucceed","GET_SIGNIN_REQUEST","GET_SIGNIN_SUCCEED","applyGetSigninSucceed","GET_SIGNOUT_REQUEST","GET_SIGNOUT_SUCCEED","applyGetSignoutSucceed","SIGNUP_FAILED","error","payload","SHOW_MESSAGE","username","user_name","email","user_email","role_type","user_role_type","profile","userId","userName","userRoles"],"mappings":"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","sourcesContent":["import * as ActionType from \"../constants/User\";\r\n\r\nconst INIT_STATE = {\r\n  userProfile: {},\r\n  isLogout: false,\r\n  isLoading: true,\r\n  isLoggedIn: false,\r\n  token: localStorage.getItem(\"@token\"),\r\n  message: \"\",\r\n};\r\n\r\nconst userReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionType.ADD_SIGNUP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case ActionType.ADD_SIGNUP_SUCCEED: {\r\n      return applyAddSignupSucceed(state, action);\r\n    }\r\n    case ActionType.GET_SIGNIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case ActionType.GET_SIGNIN_SUCCEED: {\r\n      return applyGetSigninSucceed(state, action);\r\n    }\r\n    case ActionType.GET_SIGNOUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case ActionType.GET_SIGNOUT_SUCCEED: {\r\n      return applyGetSignoutSucceed(state, action);\r\n    }\r\n    case ActionType.SIGNUP_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload.error,\r\n      };\r\n    }\r\n    case ActionType.SHOW_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        isLoggedIn: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst applyAddSignupSucceed = (state, action) => {\r\n  const { payload } = action;\r\n  return {\r\n    ...state,\r\n    username: payload.user_name,\r\n    email: payload.user_email,\r\n    role_type: payload.user_role_type,\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nconst applyGetSigninSucceed = (state, action) => {\r\n  const { payload } = action;\r\n  const { profile } = payload;\r\n  return {\r\n    ...state,\r\n    userProfile: { ...profile },\r\n    isLoading: false,\r\n    isLoggedIn: true,\r\n    isLogout: false,\r\n    message: \"\",\r\n  };\r\n};\r\n\r\nconst applyGetSignoutSucceed = (state, action) => {\r\n  return {\r\n    ...state,\r\n    userProfile: {\r\n      userId: \"\",\r\n      userName: \"\",\r\n      email: \"\",\r\n      userRoles: \"\",\r\n    },\r\n    isLoading: false,\r\n    isLoggedIn: false,\r\n    isLogout: true,\r\n    message: \"\",\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}